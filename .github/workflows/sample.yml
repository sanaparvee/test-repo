name: Terraform Deployment

on:
  push:
    branches:
      - main
      - develop

env:
  TF_VERSION: "1.4.0"
  AWS_REGION: "us-east-1"

jobs:
  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, test, prod]
        include:
          - branch: develop
            environment: dev
            aws_role: arn:aws:iam::<NON_PROD_ACCOUNT_ID>:role/<DEV_ROLE_NAME>
          - branch: develop
            environment: test
            aws_role: arn:aws:iam::<PROD_ACCOUNT_ID>:role/<TEST_ROLE_NAME>
          - branch: main
            environment: prod
            aws_role: arn:aws:iam::<PROD_ACCOUNT_ID>:role/<PROD_ROLE_NAME>

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials (Role-based)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ matrix.aws_role }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var="environment=${{ matrix.environment }}"

      - name: Save Terraform Plan output
        run: terraform plan -out=tfplan
        id: tf_plan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan-${{ matrix.environment }}
          path: ./tfplan

  manual_approval:
    name: Manual Approval
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Wait for approval
        run: |
          echo "Waiting for manual approval for ${{ matrix.environment }} environment..."
          exit 1  # Forces the job to wait for manual approval

  apply:
    name: Terraform Apply
    needs: manual_approval
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, test, prod]
        include:
          - branch: develop
            environment: dev
            aws_role: arn:aws:iam::<NON_PROD_ACCOUNT_ID>:role/<DEV_ROLE_NAME>
          - branch: develop
            environment: test
            aws_role: arn:aws:iam::<PROD_ACCOUNT_ID>:role/<TEST_ROLE_NAME>
          - branch: main
            environment: prod
            aws_role: arn:aws:iam::<PROD_ACCOUNT_ID>:role/<PROD_ROLE_NAME>

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials (Role-based)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ matrix.aws_role }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download Terraform Plan
        uses: actions/download-artifact@v2
        with:
          name: terraform-plan-${{ matrix.environment }}

      - name: Apply Terraform Plan
        run: terraform apply tfplan
